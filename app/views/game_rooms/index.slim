
.index_field
  = search_form_for @q do |f|
    = f.search_field :game_title_cont, class: "search_box", id: "game_title", placeholder: "ゲームタイトルで検索"
    .game_tag.container.mt6
      button type="button" class="btn btn-primary mr6 mb6" id="tag_1" ApexLegends
      button type="button" class="btn btn-primary mr6 mb6" id="tag_2" PUBG
      button tyep="button" class="btn btn-primary mr6 mb6" id="tag_3" Fortnite
      button type="button" class="btn btn-primary mr6 mb6" id="tag_4" FF14
      button type="button" class="btn btn-primary mr6 mb6" id="tag_5" dead by daylight
      button type="button" class="btn btn-primary mr6 mb6" id="tag_6" ポケモン ソード・シールド
      button type="button" class="btn btn-primary mr6 mb6" id="tag_7" モンスターハンター World

      .index_search_zone
        p = f.label t('game_rooms.index.sarch_vc_possible')
        | #{f.radio_button :vc_possible_eq, '', id: "vc_possible_index_none", checked: true}指定なし
        | #{f.radio_button :vc_possible_eq, true, id: "vc_possible_index"} #{t('game_rooms.index.sarch_vc_true')}
        | #{f.radio_button :vc_possible_eq, false, id: "vc_possible_index_no"} #{t('game_rooms.index.sarch_vc_false')}

      .layout_none#layout_none
        .index_search_zone
          p = f.label t('game_rooms.index.sarch_skype')
          | #{f.radio_button :available_skype_eq, '', {:checked => true}}指定なし
          | #{f.radio_button :available_skype_eq, true} #{t('game_rooms.index.sarch_skype_true')}
          | #{f.radio_button :available_skype_eq, false} #{t('game_rooms.index.sarch_skype_false')}

        .index_search_zone
          p = f.label t('game_rooms.index.sarch_discord')
          | #{f.radio_button :available_discord_eq, '', {:checked => true}}指定なし
          | #{f.radio_button :available_discord_eq, true} #{t('game_rooms.index.sarch_discord_true')}
          | #{f.radio_button :available_discord_eq, false} #{t('game_rooms.index.sarch_discord_false')}

        .index_search_zone
          p = f.label t('game_rooms.index.sarch_ingame')
          | #{f.radio_button :available_ingame_vc_eq, '', {:checked => true}}指定なし
          | #{f.radio_button :available_ingame_vc_eq, true} #{t('game_rooms.index.sarch_ingame_true')}
          | #{f.radio_button :available_ingame_vc_eq, false} #{t('game_rooms.index.sarch_ingame_false')}

      .index_search_zone
        p = f.label t('game_rooms.index.play_device')
        | #{f.radio_button :play_device_eq, '', {:checked => true}}指定なし
        | #{f.radio_button :play_device_eq, 0} #{t('game_rooms.index.sarch_device_playstation')}
        | #{f.radio_button :play_device_eq, 1} #{t('game_rooms.index.sarch_device_Nintendo')}
        | #{f.radio_button :play_device_eq, 2} #{t('game_rooms.index.sarch_device_Steam')}

      .index_search_zone
        p = f.submit t('game_rooms.index.sarch')

  section#sec
    ul.row.padding-0
      - @game_rooms.each do |gr|
        li.col-md-4.col-sm-6
          .testdiv.no_border
            h3.game_room_title = gr.game_title
            .room_device.room_items
              p.device_button = gr.play_device


            - if gr.participants.find_by(state: 0).participant_id != current_user.id && gr.participants.where(participant_id: current_user.id).blank?
              - if gr.available_twitter == true
                - if current_user.twitter_address.present?
                  - if gr.available_skype == true
                    - if current_user.skype_id.present?
                      = render 'index_device_check', gameroom: gr
                    - else
                      p = t("game_rooms.index.validate_skype")


                      .container
                        .row.mb-12
                          .col-12
                            button.btn.btn-primary.mb-12 data-target="#testModal" data-toggle="modal" type="button" 参加条件を入力して参加
                      #testModal.modal.fade aria-hidden="true" aria-labelledby="basicModal" role="dialog" tabindex="-1"
                        .modal-dialog
                          .modal-content
                            .modal-header
                              h4 class="modal-title" id="myModalLabel"&gt;削除確認画面
                            .modal-body
                              .test
                                = form_for(current_user, url: user_registration_path, html: { method: :patch }) do |f|
                                  .group
                                    = f.text_field :name, autofocus: true
                                    span.highlight
                                    span.bar
                                    label = t('users.edit.name')
                                  .group
                                    = f.text_field :profile
                                    span.highlight
                                    span.bar
                                    label = t('users.new.profile')
                                  .group
                                    = f.text_field :email, required: ""
                                    span.highlight
                                    span.bar
                                    label = t('users.new.email')
                                  .group
                                    = f.text_field :twitter_address
                                    span.highlight
                                    span.bar
                                    label = t('users.new.twitter_address')
                                  .group
                                    = f.text_field :skype_id
                                    span.highlight
                                    span.bar
                                    label = t('users.new.skype_id')
                                  .group
                                    = f.text_field :discord_id
                                    span.highlight
                                    span.bar
                                    label = t('users.new.discord_id')
                                  = f.fields_for :game_machines, current_user.game_machines.where(user_id: current_user.id, game_device: "Nintendo") do |gm|
                                    .group
                                      = gm.text_field :game_device, disabled: :disabled, class: :device_field
                                      span.highlight
                                      span.bar
                                      = gm.text_field :device_id, placeholder: "アカウントを入力してください"
                                      span.highlight
                                      span.bar
                                      label = t('users.new.device_account')
                                  = f.fields_for :game_machines, current_user.game_machines.where(user_id: current_user.id, game_device: "PlayStation") do |gm|
                                    .group
                                      = gm.text_field :game_device, disabled: :disabled, class: :device_field
                                      span.highlight
                                      span.bar
                                      = gm.text_field :device_id, placeholder: "アカウントを入力してください"
                                      span.highlight
                                      span.bar
                                      label = t('users.new.device_account')
                                  = f.fields_for :game_machines, current_user.game_machines.where(user_id: current_user.id, game_device: "Steam") do |gm|
                                    .group
                                      = gm.text_field :game_device, disabled: :disabled, class: :device_field
                                      span.highlight
                                      span.bar
                                      = gm.text_field :device_id, placeholder: "アカウントを入力してください"
                                      span.highlight
                                      span.bar
                                      label = t('users.new.device_account')


                                  input type="hidden" id="game_room_info" name="room_info" value="#{gr.id}"

                                  .action
                                  = f.submit t('users.edit.submit')

                  - else
                    p = render 'index_device_check', gameroom: gr
                - elsif gr.available_discord == true
                  - if current_user.discord_id.present?
                    p = render 'index_device_check', gameroom: gr
                  - else
                    p = t("game_rooms.index.validate_discord")
                - else
                  p = render 'index_device_check', gameroom: gr
              - elsif gr.available_twitter == false
                - if gr.available_skype == true
                  - if current_user.skype_id.present?
                    p = render 'index_device_check', gameroom: gr
                  - else
                    p = t("game_rooms.index.validate_skype")
                - elsif gr.available_discord == true
                  - if current_user.discord_id.present?
                    p = render 'index_device_check', gameroom: gr
                  - else
                    p = t("game_rooms.index.validate_discord")
                - else
                  p= render 'index_device_check', gameroom: gr
            - if gr.participants.where(participant_id: current_user.id).present?
              p = link_to "詳細ページへ", game_room_path(gr.id), class: "index_show_button"
            .room_title.room_items
              p = gr.room_name
            .room_start_time.room_items
              p = t('game_rooms.index.start_time')
              p = gr.start_time.strftime("%y年%m月%d日 %H:%M:%S")
            .room_play_time.room_items
              p = t('game_rooms.index.play_time')
              p = "#{gr.play_time} #{t('game_rooms.index.hour')}"
            .room_owner_name.room_items
              p = t('game_rooms.index.owner_name')
              p = gr.participants.find_by(state: 0).participant.name
            - if gr.comment.present?
              .room_comment.room_items
                p = t('game_rooms.index.comment')
                p = gr.comment
            - if gr.vc_possible == true
              .room_vc.room_items
                p = t('game_rooms.index.available_vc')
            - if gr.available_skype == true
              .room_skype.room_items
                p = t('game_rooms.index.available_skype')
            - if gr.available_discord == true
              .room_discord.room_items
                p = t('game_rooms.index.available_discord')
            - if gr.available_ingame_vc == true
              .room_ingame_vc.room_items
                p = t('game_rooms.index.available_ingame')
            - if gr.available_twitter == true
              .room_twitter.room_items
                p = t('game_rooms.index.open_twitter')
            - if gr.open_twitter == true
              .room_twitter.room_items
                p = t('game_rooms.index.twitter_all')
                p = gr.participants.find_by(state:0).participant.twitter_address